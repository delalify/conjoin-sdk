/*
 * Automatically generated using TypeScript API.
 * Please do not edit this file directly.
 */

export type CreateSmsPhoneNumberSenderRequestType = { numbers: { reference_id?: string | undefined; identifier_type: "VIRTUAL_LONG_NUMBER" | "10_DLC" | "SHORT_CODE" | "SHORT_CODE_USSD"; identifier: string; number_identifier_type: "LOCAL" | "INTERNATIONAL"; channels: ("SMS" | "MMS" | "RCS" | "USSD" | "OTP" | "EMAIL" | "VOICE" | "SMS_VERIFICATION" | "LIVE_CHAT" | "PUSH_NOTIFICATIONS" | "WHATSAPP_BUSINESS" | "INSTAGRAM_BUSINESS" | "APPLE_MESSAGES_FOR_BUSINESS" | "MULTISEND")[]; registrar_id?: string | undefined; country?: string | undefined; is_default: boolean; is_general_sender: boolean; is_conjoin_sender: boolean; }[]; };

export type FetchSmsPhoneNumberSendersRequestType = { query: { sender_id?: { $equals?: string; $ne?: string; $length?: number; $regex?: RegExp; $in?: string[]; $nin?: string[]; $gt?: string; $lt?: string; $gte?: string; $lte?: string; } | undefined; identifier_type?: { $in?: "VIRTUAL_LONG_NUMBER" | "10_DLC" | "SHORT_CODE" | "SHORT_CODE_USSD" | undefined; $size?: number; $lt?: { $size?: number; }; $lte?: { $size?: number; }; $gt?: { $size?: number; }; $gte?: { $size?: number; }; } | undefined; identifier?: { $equals?: string; $ne?: string; $length?: number; $regex?: RegExp; $in?: string[]; $nin?: string[]; $gt?: string; $lt?: string; $gte?: string; $lte?: string; } | undefined; channels?: { $in?: "SMS" | "MMS" | "RCS" | "USSD" | "OTP" | "EMAIL" | "VOICE" | "SMS_VERIFICATION" | "LIVE_CHAT" | "PUSH_NOTIFICATIONS" | "WHATSAPP_BUSINESS" | "INSTAGRAM_BUSINESS" | "APPLE_MESSAGES_FOR_BUSINESS" | "MULTISEND" | undefined; $size?: number; $lt?: { $size?: number; }; $lte?: { $size?: number; }; $gt?: { $size?: number; }; $gte?: { $size?: number; }; } | undefined; registrar_id?: { $equals?: string; $ne?: string; $length?: number; $regex?: RegExp; $in?: string[]; $nin?: string[]; $gt?: string; $lt?: string; $gte?: string; $lte?: string; } | undefined; country?: { $equals?: string; $ne?: string; $length?: number; $regex?: RegExp; $in?: string[]; $nin?: string[]; $gt?: string; $lt?: string; $gte?: string; $lte?: string; } | undefined; }; };

export type FetchPrivateSmsPhoneNumberSendersRequestType = { query: { sender_id?: { $equals?: string; $ne?: string; $length?: number; $regex?: RegExp; $in?: string[]; $nin?: string[]; $gt?: string; $lt?: string; $gte?: string; $lte?: string; } | undefined; reference_id?: { $equals?: string; $ne?: string; $length?: number; $regex?: RegExp; $in?: string[]; $nin?: string[]; $gt?: string; $lt?: string; $gte?: string; $lte?: string; } | undefined; identifier_type?: { $in?: "VIRTUAL_LONG_NUMBER" | "10_DLC" | "SHORT_CODE" | "SHORT_CODE_USSD" | undefined; $size?: number; $lt?: { $size?: number; }; $lte?: { $size?: number; }; $gt?: { $size?: number; }; $gte?: { $size?: number; }; } | undefined; identifier?: { $equals?: string; $ne?: string; $length?: number; $regex?: RegExp; $in?: string[]; $nin?: string[]; $gt?: string; $lt?: string; $gte?: string; $lte?: string; } | undefined; channels?: { $in?: "SMS" | "MMS" | "RCS" | "USSD" | "OTP" | "EMAIL" | "VOICE" | "SMS_VERIFICATION" | "LIVE_CHAT" | "PUSH_NOTIFICATIONS" | "WHATSAPP_BUSINESS" | "INSTAGRAM_BUSINESS" | "APPLE_MESSAGES_FOR_BUSINESS" | "MULTISEND" | undefined; $size?: number; $lt?: { $size?: number; }; $lte?: { $size?: number; }; $gt?: { $size?: number; }; $gte?: { $size?: number; }; } | undefined; country?: { $equals?: string; $ne?: string; $length?: number; $regex?: RegExp; $in?: string[]; $nin?: string[]; $gt?: string; $lt?: string; $gte?: string; $lte?: string; } | undefined; is_default?: { $equals?: boolean; $ne?: boolean; } | undefined; is_general_sender?: { $equals?: boolean; $ne?: boolean; } | undefined; is_conjoin_sender?: { $equals?: boolean; $ne?: boolean; } | undefined; }; };

export type DeleteSmsPhoneNumberSenderRequestType = { query: { sender_id: { $equals?: string; $ne?: string; $length?: number; $regex?: RegExp; $in?: string[]; $nin?: string[]; $gt?: string; $lt?: string; $gte?: string; $lte?: string; }; reference_id: { $equals?: string; $ne?: string; $length?: number; $regex?: RegExp; $in?: string[]; $nin?: string[]; $gt?: string; $lt?: string; $gte?: string; $lte?: string; }; identifier: { $equals?: string; $ne?: string; $length?: number; $regex?: RegExp; $in?: string[]; $nin?: string[]; $gt?: string; $lt?: string; $gte?: string; $lte?: string; }; }; };
